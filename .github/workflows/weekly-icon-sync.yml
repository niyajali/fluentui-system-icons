name: Weekly FluentUI Icons Sync

on:
  schedule:
    # Run on 1st and 16th of every month at 9:00 AM UTC (approximately every 15 days)
    - cron: '0 9 1,16 * *'
  workflow_dispatch:
    inputs:
      git_ref:
        description: 'Git reference to sync from (branch/tag)'
        required: false
        default: 'main'
        type: string
      force_sync:
        description: 'Force sync even if no changes detected'
        required: false
        default: false
        type: boolean

env:
  JAVA_VERSION: '17'

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-icons:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Configure Git
        run: |
          git config --local user.email "niyaj639@gmail.com"
          git config --local user.name "Sk Niyaj Ali"

      - name: Setup configuration
        id: setup_config
        run: |
          input_ref="${{ github.event.inputs.git_ref || 'main' }}"
          echo "git_ref_display=$input_ref" >> $GITHUB_OUTPUT
          echo "Using git reference: $input_ref"

      - name: Sync FluentUI icons
        id: sync_icons
        run: |
          echo "🎨 Starting FluentUI icons sync from microsoft/fluentui-system-icons@${{ steps.setup_config.outputs.git_ref_display }}"
          
          # Run the combined sync and update workflow
          if ./gradlew syncAndUpdateIcons --no-configuration-cache --console=plain; then
            echo "✅ Sync completed successfully"
            echo "sync_completed=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Sync failed"
            exit 1
          fi

      - name: Check for changes
        id: check_changes
        run: |
          # Check if there are any .kt file changes to commit
          kt_changes=$(git status --porcelain "library/src/commonMain/kotlin/fluent/ui/system/icons/" | grep '\.kt$' || true)
          
          if [[ -n "$kt_changes" ]]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "Found icon changes to commit"
            
            # Count .kt files only
            added_files=$(git status --porcelain "library/src/commonMain/kotlin/fluent/ui/system/icons/" | grep '^A.*\.kt$' | wc -l || echo "0")
            modified_files=$(git status --porcelain "library/src/commonMain/kotlin/fluent/ui/system/icons/" | grep '^M.*\.kt$' | wc -l || echo "0")
            total_files=$((added_files + modified_files))
            
            echo "added_files=$added_files" >> $GITHUB_OUTPUT
            echo "modified_files=$modified_files" >> $GITHUB_OUTPUT
            echo "total_files=$total_files" >> $GITHUB_OUTPUT
            
            # Generate change summary for PR
            echo "📊 Changes detected:"
            echo "  New .kt files: $added_files"
            echo "  Modified .kt files: $modified_files"
            echo "  Total .kt changes: $total_files"
            
            # Extract task outputs if available
            if [[ -n "$new_icons_count" ]]; then
              echo "task_new_icons=$new_icons_count" >> $GITHUB_OUTPUT
            fi
            if [[ -n "$style_breakdown" ]]; then
              echo "task_style_breakdown=$style_breakdown" >> $GITHUB_OUTPUT
            fi
            
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "No .kt file changes detected"
          fi

      - name: Generate commit message
        if: steps.check_changes.outputs.changes_detected == 'true'
        id: commit_message
        run: |
          timestamp=$(date -u +"%Y-%m-%d")
          added=${{ steps.check_changes.outputs.added_files }}
          modified=${{ steps.check_changes.outputs.modified_files }}
          
          if [ "$added" -gt 0 ] && [ "$modified" -gt 0 ]; then
            message="feat: sync FluentUI icons ($added new, $modified updated) - $timestamp"
          elif [ "$added" -gt 0 ]; then
            message="feat: add $added new FluentUI icons - $timestamp"
          elif [ "$modified" -gt 0 ]; then
            message="chore: update $modified FluentUI icon lists - $timestamp"
          else
            message="chore: sync FluentUI icons - $timestamp"
          fi
          
          echo "commit_message=$message" >> $GITHUB_OUTPUT
          echo "Generated commit message: $message"

      - name: Commit changes
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          # Add only .kt files from the icons directory
          git add "library/src/commonMain/kotlin/fluent/ui/system/icons/**/*.kt"
          
          if git diff --staged --quiet; then
            echo "⚠️ No .kt files to commit after staging"
            echo "has_changes=false" >> $GITHUB_ENV
          else
            git commit -m "${{ steps.commit_message.outputs.commit_message }}

            📊 Summary:
            - New icons: ${{ steps.check_changes.outputs.added_files }}
            - Updated lists: ${{ steps.check_changes.outputs.modified_files }}
            - Source: microsoft/fluentui-system-icons@${{ steps.setup_config.outputs.git_ref_display }}
            
            🛡️ Library-safe: Only .kt icon files committed"
            
            echo "has_changes=true" >> $GITHUB_ENV
          fi

      - name: Create Pull Request
        if: env.has_changes == 'true'
        id: create_pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: ${{ steps.commit_message.outputs.commit_message }}
          title: "🎨 Weekly FluentUI Icons Sync - ${{ steps.check_changes.outputs.total_files }} .kt files updated"
          branch: "auto/fluent-icons-sync-${{ github.run_number }}"
          committer: "Sk Niyaj Ali <niyaj639@gmail.com>"
          author: "Sk Niyaj Ali <niyaj639@gmail.com>"
          assignees: "niyajali"
          delete-branch: true
          body: |
            ## 🎨 Automated FluentUI Icons Sync
            
            This PR contains the latest FluentUI System Icons from Microsoft's repository.
            
            ### 📊 Summary
            - **New icons added**: ${{ steps.check_changes.outputs.added_files }}
            - **Icon lists updated**: ${{ steps.check_changes.outputs.modified_files }}
            - **Total .kt files changed**: ${{ steps.check_changes.outputs.total_files }}
            - **Sync date**: ${{ github.run_time }}
            - **Source reference**: microsoft/fluentui-system-icons@${{ steps.setup_config.outputs.git_ref_display }}
            
            ### 🎯 Task Output Details
            ${{ steps.check_changes.outputs.task_style_breakdown && format('**Style breakdown**: {0}', steps.check_changes.outputs.task_style_breakdown) || 'Style breakdown not available' }}
            
            ### 🛡️ Safety Features
            - ✅ **Library-safe**: Only .kt icon files committed
            - ✅ **Backward compatible**: No existing icons modified
            - ✅ **Additive only**: New icons and updated lists
            - ✅ **Build verified**: Icons generated from verified SVG sources
            
            ### 📝 Files Changed
            This sync operation only modifies Kotlin (.kt) files in the icons directory:
            - New icon files: Compose ImageVector definitions
            - Updated icon lists: Collection files for each style
            
            **No build configuration or other files were modified in this sync.**

          labels: |
            fluent-icons
            enhancement
            automated-sync
            library-safe

      - name: Add PR labels
        if: env.has_changes == 'true'
        run: |
          # Additional logic for labeling based on change types
          labels="automation,icons,fluent-ui"
          
          if [ "${{ steps.check_changes.outputs.added_files }}" -gt 0 ]; then
            labels="$labels,enhancement"
          fi
          
          if [ "${{ steps.check_changes.outputs.modified_files }}" -gt 0 ]; then
            labels="$labels,maintenance"
          fi
          
          echo "Labels applied: $labels"

      - name: Post summary
        if: always()
        run: |
          echo "## 📊 FluentUI Icons Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Source:** microsoft/fluentui-system-icons@${{ steps.setup_config.outputs.git_ref_display }}" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name == 'schedule' && 'Scheduled' || 'Manual' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check_changes.outputs.changes_detected }}" == "true" ]; then
            echo "✅ **Sync completed successfully**" >> $GITHUB_STEP_SUMMARY
            echo "- New .kt icon files: ${{ steps.check_changes.outputs.added_files }}" >> $GITHUB_STEP_SUMMARY
            echo "- Updated .kt list files: ${{ steps.check_changes.outputs.modified_files }}" >> $GITHUB_STEP_SUMMARY
            echo "- Total .kt files changed: ${{ steps.check_changes.outputs.total_files }}" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ env.has_changes }}" = "true" ]; then
              echo "- Pull request: ${{ steps.create_pr.outputs.pull-request-url }}" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "ℹ️ **No changes detected**" >> $GITHUB_STEP_SUMMARY
            echo "All FluentUI icons are up to date." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🛡️ Safety Features" >> $GITHUB_STEP_SUMMARY
          echo "- Library-safe: Only .kt icon files committed" >> $GITHUB_STEP_SUMMARY
          echo "- Backward compatible: No breaking changes" >> $GITHUB_STEP_SUMMARY
          echo "- Additive only: New icons and updated lists" >> $GITHUB_STEP_SUMMARY
          echo "- Build isolation: No configuration files modified" >> $GITHUB_STEP_SUMMARY

      - name: Cleanup on failure
        if: failure()
        run: |
          echo "❌ Workflow failed. Cleaning up..."
          
          # Reset any uncommitted changes
          git reset --hard HEAD
          git clean -fd
          
          # Log failure details
          echo "::error::FluentUI Icons sync workflow failed"
          echo "Please check the logs above for details"
          echo "Common causes:"
          echo "- Network connectivity issues"
          echo "- Git repository access problems"  
          echo "- Build configuration errors"
