/*
 * MIT License
 *
 * Copyright (c) 2020 Microsoft Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package fluent.ui.system.icons.regular

import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.padding
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.unit.dp
import fluent.ui.system.icons.FluentUi
import org.jetbrains.compose.ui.tooling.preview.Preview

public val FluentUi.Regular.SportHockey: ImageVector by lazy(LazyThreadSafetyMode.NONE) {
    ImageVector.Builder(
        name = "Regular.SportHockey",
        defaultWidth = 24.dp,
        defaultHeight = 24.dp,
        viewportWidth = 24f,
        viewportHeight = 24f,
    ).apply {
        path(fill = SolidColor(Color(0xFF212121))) {
            moveTo(17.489f, 6.871f)
            curveTo(17.556f, 6.463f, 17.279f, 6.077f, 16.87f, 6.01f)
            curveTo(16.452f, 5.942f, 16.079f, 6.244f, 16.005f, 6.649f)
            curveTo(16.002f, 6.667f, 15.996f, 6.697f, 15.987f, 6.738f)
            curveTo(15.969f, 6.82f, 15.94f, 6.945f, 15.896f, 7.106f)
            curveTo(15.807f, 7.429f, 15.658f, 7.897f, 15.419f, 8.456f)
            curveTo(14.941f, 9.574f, 14.107f, 11.051f, 12.687f, 12.47f)
            curveTo(11.267f, 13.891f, 9.731f, 14.782f, 8.549f, 15.317f)
            curveTo(7.959f, 15.585f, 7.46f, 15.762f, 7.112f, 15.871f)
            curveTo(6.939f, 15.926f, 6.804f, 15.963f, 6.714f, 15.987f)
            curveTo(6.669f, 15.999f, 6.636f, 16.007f, 6.615f, 16.012f)
            lineTo(6.593f, 16.017f)
            lineTo(6.59f, 16.017f)
            lineTo(6.589f, 16.018f)
            curveTo(6.185f, 16.106f, 5.928f, 16.504f, 6.016f, 16.909f)
            curveTo(6.158f, 17.567f, 6.907f, 17.483f, 6.907f, 17.483f)
            lineTo(6.91f, 17.483f)
            lineTo(6.914f, 17.482f)
            lineTo(6.925f, 17.48f)
            lineTo(6.962f, 17.471f)
            curveTo(6.994f, 17.463f, 7.038f, 17.453f, 7.094f, 17.438f)
            curveTo(7.206f, 17.409f, 7.365f, 17.364f, 7.563f, 17.302f)
            curveTo(7.96f, 17.177f, 8.516f, 16.979f, 9.168f, 16.684f)
            curveTo(10.47f, 16.094f, 12.169f, 15.11f, 13.748f, 13.531f)
            curveTo(15.329f, 11.95f, 16.26f, 10.302f, 16.798f, 9.045f)
            curveTo(17.067f, 8.417f, 17.238f, 7.884f, 17.342f, 7.504f)
            curveTo(17.395f, 7.314f, 17.43f, 7.161f, 17.454f, 7.054f)
            curveTo(17.465f, 7f, 17.473f, 6.957f, 17.479f, 6.927f)
            lineTo(17.486f, 6.89f)
            lineTo(17.488f, 6.878f)
            lineTo(17.489f, 6.874f)
            lineTo(17.489f, 6.873f)
            lineTo(17.489f, 6.871f)
            close()
            moveTo(2.352f, 12.573f)
            curveTo(1.668f, 14.472f, 1.577f, 16.447f, 2.79f, 17.672f)
            lineTo(2.789f, 17.673f)
            lineTo(3.024f, 17.91f)
            curveTo(3.176f, 18.064f, 3.4f, 18.291f, 3.685f, 18.578f)
            curveTo(4.255f, 19.152f, 5.069f, 19.971f, 6.047f, 20.949f)
            curveTo(7.327f, 22.229f, 9.352f, 22.25f, 11.336f, 21.609f)
            curveTo(13.362f, 20.955f, 15.586f, 19.548f, 17.562f, 17.572f)
            curveTo(19.538f, 15.597f, 20.944f, 13.373f, 21.599f, 11.346f)
            curveTo(22.24f, 9.362f, 22.219f, 7.338f, 20.939f, 6.058f)
            curveTo(20.421f, 5.54f, 19.608f, 4.721f, 18.924f, 4.03f)
            curveTo(18.581f, 3.685f, 18.272f, 3.372f, 18.048f, 3.146f)
            lineTo(17.685f, 2.779f)
            lineTo(17.683f, 2.781f)
            curveTo(16.458f, 1.567f, 14.482f, 1.658f, 12.583f, 2.342f)
            curveTo(10.618f, 3.05f, 8.434f, 4.485f, 6.464f, 6.455f)
            curveTo(4.495f, 8.424f, 3.06f, 10.608f, 2.352f, 12.573f)
            close()
            moveTo(3.763f, 13.082f)
            curveTo(4.381f, 11.367f, 5.676f, 9.365f, 7.525f, 7.515f)
            curveTo(9.375f, 5.666f, 11.377f, 4.371f, 13.091f, 3.753f)
            curveTo(14.868f, 3.113f, 16.06f, 3.28f, 16.632f, 3.852f)
            lineTo(16.634f, 3.85f)
            lineTo(16.982f, 4.201f)
            curveTo(17.206f, 4.428f, 17.516f, 4.741f, 17.858f, 5.086f)
            curveTo(18.543f, 5.777f, 19.358f, 6.598f, 19.878f, 7.118f)
            curveTo(20.553f, 7.793f, 20.753f, 9.085f, 20.171f, 10.885f)
            curveTo(19.604f, 12.642f, 18.345f, 14.668f, 16.501f, 16.512f)
            curveTo(14.658f, 18.355f, 12.632f, 19.614f, 10.875f, 20.182f)
            curveTo(9.075f, 20.763f, 7.782f, 20.563f, 7.108f, 19.889f)
            curveTo(6.132f, 18.912f, 5.319f, 18.095f, 4.75f, 17.521f)
            curveTo(4.466f, 17.235f, 4.242f, 17.009f, 4.09f, 16.855f)
            lineTo(3.861f, 16.623f)
            lineTo(3.862f, 16.622f)
            curveTo(3.29f, 16.05f, 3.123f, 14.858f, 3.763f, 13.082f)
            close()
        }
    }.build()
}

@Preview
@Composable
private fun SportHockeyPreview() {
    Box(modifier = Modifier.padding(12.dp)) {
        Image(imageVector = FluentUi.Regular.SportHockey, contentDescription = null)
    }
}
